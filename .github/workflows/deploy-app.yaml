name: CI/CD Pipeline in Deploy AWS

on:
  push:
    branches:
      - "main"
      - "release/**"
  pull_request:
    branches:
      - "main"
      - "release/**"

jobs:
  build:
    runs-on: ubuntu-latest

    env: # ‚úÖ Define shared environment variables once
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      EMAIL_SERVER_HOST: ${{ secrets.EMAIL_SERVER_HOST }}
      EMAIL_SERVER_PORT: ${{ secrets.EMAIL_SERVER_PORT }}
      EMAIL_SERVER_USER: ${{ secrets.EMAIL_SERVER_USER }}
      EMAIL_SERVER_PASSWORD: ${{ secrets.EMAIL_SERVER_PASSWORD }}
      EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
      EMAIL_SERVER_SECURE: ${{ secrets.EMAIL_SERVER_SECURE }}
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

    steps:
      - name: üì¶ Checkout code
        uses: actions/checkout@v4

      - name: üß∞ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: v22.9.0

      - name: üì• Install dependencies
        run: npm install

      - name: üîÑ Prisma migrate
        run: npx prisma migrate dev --name init

      - name: üèóÔ∏è Build App
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build # ‚úÖ Wait for build to finish

    steps:
      - name: üì¶ Checkout code
        uses: actions/checkout@v4

      - name: üöÄ Deploy to EC2
        env:
          AWS_EC2_SSH_PRIVATE_KEY: ${{ secrets.AWS_EC2_SSH_PRIVATE_KEY }}
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@"$EC2_HOST" << 'EOF'
          ssh -i "$AWS_EC2_SSH_PRIVATE_KEY" ubuntu@ec2-13-219-217-207.compute-1.amazonaws.com
            cd /home/ubuntu/application/lenslogy
            git pull origin main
            npm install
            npm run build
            pm2 reload 0 || pm2 start npm --name "lenslogy" -- start
          EOF
